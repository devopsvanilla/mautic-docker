# Define common volumes for Mautic services
x-mautic-volumes: &mautic-volumes
  - ./volumes/mautic/config:/var/www/html/config:z
  - ./volumes/mautic/logs:/var/www/html/var/logs:z
  - ./volumes/mautic/media/files:/var/www/html/docroot/media/files:z
  - ./volumes/mautic/media/images:/var/www/html/docroot/media/images:z
  - ./volumes/mautic/cron:/opt/mautic/cron:z
  - ./mautic_web-entrypoint_custom.sh:/entrypoint_custom_web.sh
  - ./mautic_worker-entrypoint_custom.sh:/entrypoint_custom_worker.sh
  - ./mautic_cron-entrypoint_custom.sh:/entrypoint_custom_cron.sh
  - ./mautic_cron-updateifchanged.sh:/mautic_cron-updateifchanged.sh
  - ./GeoIP.conf.template:/GeoIP.conf.template

services:
  # MySQL Database Service
  db:
    image: mysql:8.0
    hostname: ${MYSQL_HOST}
    container_name: ${COMPOSE_PROJECT_NAME}-db
    restart: unless-stopped
    environment:
      - SHELL=/bin/bash
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    healthcheck:
      test: mysqladmin --user=$MYSQL_USER --password=$MYSQL_PASSWORD ping
      start_period: 360s
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    networks:
      - mautic_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: ${COMPOSE_PROJECT_NAME}-rabbitmq
    restart: unless-stopped
    environment:
      - SHELL=/bin/bash
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_MESSAGESQUEUE=${RABBITMQ_DEFAULT_MESSAGESQUEUE}
      - RABBITMQ_DEFAULT_FAILEDQUEUE=${RABBITMQ_DEFAULT_FAILEDQUEUE}
    ports:
      - "${RABBITMQ_NODE_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 360s
      interval: 30s
      timeout: 10s
      retries: 5
    # command: >
    #   sh -c "
    #     while ! rabbitmqctl status; do
    #       sleep 1
    #     done;

    #     rabbitmqctl add_vhost ${RABBITMQ_DEFAULT_VHOST}/${RABBITMQ_DEFAULT_MESSAGESQUEUE} &&
    #     rabbitmqctl add_vhost ${RABBITMQ_DEFAULT_VHOST}/${RABBITMQ_DEFAULT_FAILEDQUEUE} &&

    #     rabbitmqctl set_permissions -p ${RABBITMQ_DEFAULT_VHOST}/${RABBITMQ_DEFAULT_MESSAGESQUEUE} user '.*' '.*' '.*'
    #     rabbitmqctl set_permissions -p ${RABBITMQ_DEFAULT_VHOST}/${RABBITMQ_DEFAULT_FAILEDQUEUE} user '.*' '.*' '.*'
    #   "
    networks:
      - mautic_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Mautic Web Application
  mautic_web:
    image: mautic/mautic:5.2.3-apache
    container_name: ${COMPOSE_PROJECT_NAME}-mautic_web
    hostname: mautic-web
    restart: unless-stopped
    links:
      - db:mysql
    ports:
      - "8083:80"
    volumes: *mautic-volumes
    environment:
      - SHELL=/bin/bash
      - DOCKER_MAUTIC_ROLE=mautic_web
      - PHP_INI_VALUE_MEMORY_LIMIT=1536M
      - PHP_INI_VALUE_MAX_EXECUTION_TIME=300
    env_file:
      - .mautic_env
    command: ["/entrypoint_custom_web.sh"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      start_period: 360s
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mautic_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Mautic Cron Service
  mautic_cron:
    image: mautic/mautic:5.2.3-apache
    container_name: ${COMPOSE_PROJECT_NAME}-mautic_cronrm
    restart: unless-stopped
    links:
      - db:mysql
    volumes: *mautic-volumes
    environment:
      - SHELL=/bin/bash
      - DOCKER_MAUTIC_ROLE=mautic_cron
      - PHP_INI_VALUE_MEMORY_LIMIT=1536M
      - PHP_INI_VALUE_MAX_EXECUTION_TIME=300
    env_file:
      - .mautic_env
    command: ["/entrypoint_custom_cron.sh"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    depends_on:
      mautic_web:
        condition: service_healthy
    networks:
      - mautic_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Mautic Worker Service
  mautic_worker:
    image: mautic/mautic:5.2.3-apache
    restart: unless-stopped
    links:
      - db:mysql
    volumes: *mautic-volumes
    environment:
      - SHELL=/bin/bash
      - PHP_INI_VALUE_MEMORY_LIMIT=1536M
      - DOCKER_MAUTIC_ROLE=mautic_worker
      - DOCKER_MAUTIC_WORKERS_CONSUME_EMAIL=2
      - DOCKER_MAUTIC_WORKERS_CONSUME_HIT=2
      - DOCKER_MAUTIC_WORKERS_CONSUME_FAILED=2
    env_file:
      - .mautic_env
    command: ["/entrypoint_custom_worker.sh"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    depends_on:
      mautic_web:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mautic_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Network configuration
networks:
  mautic_network:
    name: ${COMPOSE_PROJECT_NAME}-docker
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
